- hosts: bastion
  become: true
  roles:
    - mojaloop.iac.bastion_common
    - mojaloop.iac.docker

- hosts: master
  become: true
  roles:
    - role: mojaloop.iac.k8s_node_common

- hosts: agent
  become: true
  roles:
    - role: mojaloop.iac.k8s_node_common

- hosts: master
  become: true
  roles:
    - role: mojaloop.iac.microk8s
      vars:
        microk8s_enable_HA: true
        microk8s_group_HA: "master"
        microk8s_group_WORKERS: "agent"
        add_workers_to_hostfile: true
        microk8s_plugins:
          ingress: false # Ingress controller for external access
          dns: false
          metrics-server: false # K8s Metrics Server for API access to service metrics
          rbac: true # Role-Based Access Control for authorisation
          hostpath-storage: true # Storage class; allocates storage from host directory
          registry: "size={{ registry_size }}" # Private image registry exposed on localhost:32000
          dashboard: true # The Kubernetes dashboard
          ambassador: false # Ambassador API Gateway and Ingress
          cilium: false # SDN, fast with full network policy
          fluentd: false # Elasticsearch-Fluentd-Kibana logging and monitoring
          gpu: false # Automatic enablement of Nvidia CUDA
          helm: false # Helm 2 - the package manager for Kubernetes
          helm3: true # Helm 3 - Kubernetes package manager
          istio: false # Core Istio service mesh services
          jaeger: false # Kubernetes Jaeger operator with its simple config
          knative: false # The Knative framework on Kubernetes.
          kubeflow: false # Kubeflow for easy ML deployments
          linkerd: false # Linkerd is a service mesh for Kubernetes and other frameworks
          metallb: false # Loadbalancer for your Kubernetes cluster
          multus: false # Multus CNI enables attaching multiple network interfaces to pods
          prometheus: false # Prometheus operator for monitoring and logging
          traefik: false # another ingress
          portainer: false # Container management dashboard
          keda: false # Kubernetes Event-driven Autoscaling operator.
          kata: false # A secure container runtime with lightweight virtual machines
          openebs: false # openebs storage
          openfaas: false

- hosts: agent
  become: true
  roles:
    - role: mojaloop.iac.microk8s
      vars:
        microk8s_enable_HA: true
        microk8s_group_HA: "master"
        microk8s_group_WORKERS: "agent"

- hosts: "{{ groups['bastion'] | sort | first }}"
  become: true
  roles:
    - role: geerlingguy.k8s.helm
      vars:
        helm_version: "v3.14.0"
    - role: mojaloop.iac.cc_k8s
      vars:
        helm_version: "3.14.0"

- hosts: bastion
  become: true
  roles:
    - role: mojaloop.iac.netbird_client
      vars:
        netbird_api_host: "{{ hostvars[groups['bastion'][0]]['fact_netbird_management_url'] }}"
        netbird_setup_key: "{{ hostvars[groups['bastion'][0]]['fact_bastion_netbird_setup_key'] }}"

- hosts: master
  become: true
  tasks:
    - name: write current oidc config
      ansible.builtin.import_role:
        name: mojaloop.iac.microk8s
        tasks_from: configure-oidc
      vars:
        kubernetes_oidc_enabled: true
        kubernetes_oidc_issuer: "{{ hostvars[groups['bastion'][0]]['kubernetes_oidc_issuer'] }}"
        kubernetes_oidc_client_id: "{{ hostvars[groups['bastion'][0]]['kubernetes_oidc_client_id'] }}"
        kubernetes_oidc_groups_claim: "{{ hostvars[groups['bastion'][0]]['kubernetes_oidc_groups_claim'] }}"
        kubernetes_oidc_groups_prefix: "{{ hostvars[groups['bastion'][0]]['kubernetes_oidc_groups_prefix'] }}"
        kubernetes_oidc_username_prefix: "{{ hostvars[groups['bastion'][0]]['kubernetes_oidc_username_prefix'] }}"
        kubernetes_oidc_username_claim: "{{ hostvars[groups['bastion'][0]]['kubernetes_oidc_username_claim'] }}"
