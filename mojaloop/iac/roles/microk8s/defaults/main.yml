---
#
# defaults file for ansible_role_microk8s
#

# version management
microk8s_version: "1.31/stable"
microk8s_disable_snap_autoupdate: false

# plugin configuration
microk8s_dns_resolvers: 8.8.8.8,8.8.4.4
registry_size: 20Gi
microk8s_plugins: {}
helm3_repositories:
  - name: stable
    url: https://charts.helm.sh/stable

# users to make members of microk8s group
users: ["root"]

# enable high-availability?
microk8s_enable_ha: false

# hostgroup whose members will form high-availability cluster
microk8s_group_ha: "microk8s_ha"

# regex to select IP address for joining nodes in HA setup
microk8s_ip_regex_ha: "([0-9]{1,3}[\\.]){3}[0-9]{1,3}"

# hostgroup whose members will act as worker nodes only (no control-plane components run here)
microk8s_group_workers: "microk8s_workers"

# option to add workers hostgroup member to hostfile
add_workers_to_hostfile: false
# for setting up custom certificate request.  Set to template name to enable
microk8s_csr_template: csr.conf.template.j2
kubeconfig_local_location: "/tmp"
kubeapi_loadbalancer_fqdn: nlb.lb.com
enable_registry_mirror: false
registry_mirror_fqdn: example.com
registry_mirror_port: 9000
teardown: false
microk8s_root_path: /var/snap/microk8s/
longhorn_data_path: /var/lib/longhorn/
microk8s_apiserver_port: 16443
microk8s_dev_skip: false
dev_skip: false
base_domain: "dev.example.com"
kubernetes_oidc_enabled: false
kubernetes_oidc_issuer: https://issurerurl
kubernetes_oidc_client_id: "acsdfasdfasdf"
kubernetes_oidc_groups_claim: "techops-admin, techops-user"
kubernetes_oidc_groups_prefix: "oidc:"
kubernetes_oidc_username_prefix: "oidc:"
kubernetes_oidc_username_claim: "username"
docker_registry_mirrors: ["docker.io", "ghcr.io", "quay.io", "k8s.gcr.io"]
dns_bind_address: "169.254.20.10"
