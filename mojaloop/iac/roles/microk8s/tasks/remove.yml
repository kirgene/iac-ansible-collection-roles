# for on premise installations
# - name: Leave microk8s cluster
#   become: true
#   ansible.builtin.shell: "microk8s leave || true"
#   ignore_errors: true

# - name: Reset microk8s
#   become: true
#   ansible.builtin.shell: "microk8s reset --destroy-storage"
#   ignore_errors: true

- name: Stop microk8s
  become: true
  # ansible.builtin.shell: "microk8s stop || true"
  ansible.builtin.shell: systemctl stop snap.microk8s.*
  ignore_errors: true

- name: Force unmount all RBD-related mount paths
  ansible.builtin.shell: |
    mount | grep rbd | awk '{print $3}' | while read mp; do
      echo "Unmounting $mp"
      umount -l "$mp" || echo "Failed to unmount $mp"
    done
    rm -rf /var/snap/microk8s/common/var/lib/kubelet/plugins/kubernetes.io/csi/*ceph*
    rm -rf /var/snap/microk8s/common/var/lib/kubelet/pods/*/volumes/kubernetes.io~csi/*
  args:
    executable: /bin/bash
  # when: cloud_platform == "private-cloud"

- name: Remove microk8s
  become: true
  ansible.builtin.shell: "snap remove --purge microk8s"
  ignore_errors: true

- name: Remove microk8s data directories
  become: true
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  loop: "{{ microk8s_root_paths }}"

- name: Flush iptables
  become: true
  ansible.builtin.shell: |
    iptables -F
    iptables -t nat -F
    iptables -t mangle -F
    iptables -X
  ignore_errors: true

- name: Delete all cali* interfaces
  become: true
  ansible.builtin.shell: |
    for intf in $(ip -o link | grep cali | awk -F': ' '{print $2}'); do  ip link delete $intf || true; done
    sudo ip link delete nodecache
  ignore_errors: true

- name: Remove longhorn data
  become: true
  ansible.builtin.file:
    state: absent
    path: "{{ longhorn_data_path }}"

- name: Remove rook data
  become: true
  ansible.builtin.file:
    state: absent
    path: "{{ rook_data_path }}"

- name: reset rook vol
  become: true
  shell: |
    wipefs -a {{ rook_disk_vol }}
    dd if=/dev/zero of="{{ rook_disk_vol }}" bs=1M count=100 oflag=direct,dsync
    partprobe {{ rook_disk_vol }}
  when: enable_rook_disk_reset | bool