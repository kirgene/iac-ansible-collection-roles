- name: Make sure snapd is installed
  ansible.builtin.package:
    name:
      - snapd
    state: latest
  become: true

- name: "create directory for microk8s config"
  become: true
  ansible.builtin.file:
    path: /var/snap/microk8s/common/
    state: directory
    recurse: no

- name: Create config file for mk8s
  become: true
  ansible.builtin.template:
    src: microk8s-config.yaml.j2
    dest: /var/snap/microk8s/common/.microk8s.yaml

- name: Create oidc config file for mk8s
  become: true
  ansible.builtin.copy:
    src: oidc.conf.yaml
    dest: /var/snap/microk8s/common/.oidc_config.yaml
    force: no
  when: kubernetes_oidc_enabled | bool

- name: Install microk8s
  become: true
  community.general.snap:
    name: microk8s
    classic: yes
    channel: "{{ microk8s_version }}"
#requires 1.30 and above, if running 1.29 or below, need to add --feature-gates=StructuredAuthenticationConfiguration=true

- name: add oidc config
  become: true
  ansible.builtin.blockinfile:
    dest: /var/snap/microk8s/current/args/kube-apiserver
    marker: "# {mark} ANSIBLE MANAGED: microk8s add oidc config"
    content: "--authentication-config /var/snap/microk8s/common/.oidc_config.yaml"
  when: kubernetes_oidc_enabled | bool

- name: Wait for microk8s to be ready
  become: true
  ansible.builtin.command: microk8s.status --wait-ready
  changed_when: false
  register: mk8sstatusout
  failed_when:
    - "'This MicroK8s deployment is acting as a node in a cluster.' not in mk8sstatusout.stdout_lines"
    - mk8sstatusout.rc > 0

- name: Create kubectl alias
  become: true
  ansible.builtin.command: "snap alias microk8s.kubectl kubectl"
  changed_when: false
  register: aliaskubectlout

- name: Create helm3 alias
  become: true
  ansible.builtin.command: "snap alias microk8s.helm3 helm"
  changed_when: false
  register: aliashelmout

- name: "create directory for mirror registry configs"
  become: true
  ansible.builtin.file:
    path: /var/snap/microk8s/current/args/certs.d/{{ item }}/
    state: directory
    recurse: no
  with_items: "{{ docker_registry_mirrors }}"
  when:
    - enable_registry_mirror

- name: Create mirror registry config
  become: true
  ansible.builtin.template:
    src: hosts.toml.j2
    dest: /var/snap/microk8s/current/args/certs.d/{{ item }}/hosts.toml
  with_items: "{{ docker_registry_mirrors }}"
  when:
    - enable_registry_mirror

- name: Create custom certificates
  become: true
  ansible.builtin.template:
    src: csr.conf.template.j2
    dest: /var/snap/microk8s/current/certs/csr.conf.template
    mode: 0644
  notify:
    - Wait for microk8s to be ready before handler
    - Refresh certs

- name: Create folder for microk8s certificates
  become: true
  ansible.builtin.file:
    path: /usr/share/ca-certificates/extra
    state: directory
    mode: 0755

- name: Copy certificates
  become: true
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/share/ca-certificates/extra
    remote_src: yes
    force: yes
    mode: '0644'
  loop:
    - /var/snap/microk8s/current/certs/ca.crt
    - /var/snap/microk8s/current/certs/front-proxy-ca.crt

- name: Trust certificates generated by microk8s
  become: true
  ansible.builtin.command: "update-ca-certificates"
  register: command_result
  changed_when: "'0 added, 0 removed' not in command_result.stdout"

- name: Disable snap autoupdate
  become: true
  ansible.builtin.blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED: microk8s Disable snap autoupdate"
    content: |
      127.0.0.1 api.snapcraft.io
  when: microk8s_disable_snap_autoupdate